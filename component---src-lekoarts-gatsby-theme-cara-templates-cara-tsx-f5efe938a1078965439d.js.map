{"version":3,"file":"component---src-lekoarts-gatsby-theme-cara-templates-cara-tsx-f5efe938a1078965439d.js","mappings":"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","sources":["webpack://TinyTubeBio/../src/image-utils.ts","webpack://TinyTubeBio/../src/components/hooks.ts","webpack://TinyTubeBio/../src/components/layout-wrapper.tsx","webpack://TinyTubeBio/../src/components/picture.tsx","webpack://TinyTubeBio/../src/components/placeholder.tsx","webpack://TinyTubeBio/../src/components/main-image.tsx","webpack://TinyTubeBio/../src/components/gatsby-image.server.tsx","webpack://TinyTubeBio/../src/components/gatsby-image.browser.tsx","webpack://TinyTubeBio/../src/components/static-image.server.tsx","webpack://TinyTubeBio/../src/components/static-image.tsx","webpack://TinyTubeBio/./node_modules/camelcase/index.js","webpack://TinyTubeBio/./static/microCart.png","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/sections/intro.mdx","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/components/hero.tsx","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/sections/projects.mdx","webpack://TinyTubeBio/./node_modules/@theme-ui/components/dist/theme-ui-components.esm.js","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/components/footer.tsx","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/sections/contact.mdx","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/components/projects.tsx","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/sections/about.mdx","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/sections/about_pipettes.mdx","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/components/about.tsx","webpack://TinyTubeBio/./src/@lekoarts/gatsby-theme-cara/templates/cara.tsx"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default __webpack_public_path__ + \"static/microCart-cd976083bf8b452c8be0d3a23e3d85c1.png\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Tiny Tube Bio\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Reinventing biotech's workhorse, the micropipette.\")), \"\\n\", React.createElement(_components.p, null, \"We are a life science lab device start-up based in Toronto, Canada.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Divider from \"../elements/divider\"\nimport Inner from \"../elements/inner\"\nimport Content from \"../elements/content\"\nimport Svg from \"./svg\"\nimport MicroCartIcon from \"../../../../static/microCart.png\"\nimport { withPrefix } from \"gatsby\"\nimport {StaticImage} from \"gatsby-plugin-image\"\nimport { hidden } from \"../styles/utils\"\nimport { UpDown, UpDownWide, waveAnimation } from \"../styles/animations\"\nimport Intro from \"../sections/intro.mdx\"\n\n\nconst Hero = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\n  <div>\n    <Divider speed={0.2} offset={offset} factor={factor}>\n      {/* <UpDown>\n        <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_blue\" left=\"80%\" top=\"10%\" />\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"50%\" />\n        <Svg icon=\"circle\" width={16} color=\"icon_darker\" left=\"70%\" top=\"90%\" />\n        <Svg icon=\"triangle\" width={16} stroke color=\"icon_darkest\" left=\"30%\" top=\"65%\" />\n        <Svg icon=\"cross\" width={16} stroke color=\"icon_pink\" left=\"28%\" top=\"15%\" />\n        <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"75%\" top=\"10%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\n        </UpDown> */}\n        {/* <StaticImage image={MicroCartIcon}/> */}\n        <img src={MicroCartIcon} width={500} sx={{      position: `absolute`,\n      stroke: `currentColor`,\n      fill: `currentColor`,\n      display: `block`,\n      color: `currentcolor`,\n      width: \"50%\",\n      left: \"50%\",\n      bottom: \"30%\"}}></img>\n      <UpDownWide>\n        {/* <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"50%\" />\n        <Svg icon=\"circle\" width={16} color=\"icon_darker\" left=\"70%\" top=\"90%\" />\n        <Svg icon=\"triangle\" width={16} stroke color=\"icon_darkest\" left=\"30%\" top=\"65%\" />\n        <Svg icon=\"cross\" width={16} stroke color=\"icon_pink\" left=\"28%\" top=\"15%\" />\n        <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"75%\" top=\"10%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" /> */}\n      </UpDownWide>\n      {/* <Svg icon=\"circle\" hiddenMobile width={24} color=\"icon_darker\" left=\"5%\" top=\"70%\" />\n      <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"4%\" top=\"20%\" />\n      <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"50%\" top=\"60%\" />\n      <Svg icon=\"upDown\" width={8} color=\"icon_darkest\" left=\"95%\" top=\"90%\" />\n      <Svg icon=\"upDown\" hiddenMobile width={24} color=\"icon_darker\" left=\"40%\" top=\"80%\" />\n      <Svg icon=\"triangle\" width={8} stroke color=\"icon_darker\" left=\"25%\" top=\"5%\" />\n      <Svg icon=\"circle\" width={64} color=\"icon_green\" left=\"95%\" top=\"5%\" />\n      <Svg icon=\"box\" hiddenMobile width={64} color=\"icon_purple\" left=\"5%\" top=\"90%\" />\n      <Svg icon=\"box\" width={6} color=\"icon_darkest\" left=\"10%\" top=\"10%\" />\n      <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"40%\" top=\"30%\" />\n      <Svg icon=\"hexa\" width={16} stroke color=\"icon_darker\" left=\"10%\" top=\"50%\" />\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_darker\" left=\"80%\" top=\"70%\" />  */}\n    </Divider>\n    <Content sx={{ variant: `texts.bigger` }} speed={0.4} offset={offset} factor={factor}>\n      <Inner>\n        <Intro />\n      </Inner>\n    </Content>\n    <Divider fill=\"divider\" speed={0.2} offset={offset} factor={factor}>\n      <div sx={{ position: `absolute`, bottom: 0, width: `full`, transform: `matrix(1, 0, 0, -1, 0, 0)` }}>\n        <div\n          sx={{\n            position: `relative`,\n            height: `full`,\n            svg: { width: `100%`, height: `40vh` },\n            path: { animation: waveAnimation(`20s`) },\n          }}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"contact-wave\" viewBox=\"0 0 800 338.05\" preserveAspectRatio=\"none\">\n            <path>\n              <animate\n                attributeName=\"d\"\n                values=\"M 0 100 Q 250 50 400 200 Q 550 350 800 300 L 800 0 L 0 0 L 0 100 Z;M 0 100 Q 200 150 400 200 Q 600 250 800 300 L 800 0 L 0 0 L 0 100 Z;M 0 100 Q 150 350 400 200 Q 650 50 800 300 L 800 0 L 0 0 L 0 100 Z\"\n                repeatCount=\"indefinite\"\n                dur=\"30s\"\n              />\n            </path>\n          </svg>\n        </div>\n      </div>\n    </Divider>\n  </div>\n)\n\nexport default Hero\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const {ProjectCard} = Object.assign({}, _provideComponents(), props.components);\n  if (!ProjectCard) _missingMdxReference(\"ProjectCard\", true);\n  return React.createElement(ProjectCard, {\n    title: \"Slide Deck\",\n    link: \"https://docs.google.com/presentation/d/e/2PACX-1vSXsgzcbyT512yMth7KAVLq3vFhH900kRFQMYvX1j9I--GqoznhvPZfSSNOIenZM2XTM9-ePnsEoVqO/pubembed?start=true&loop=true&delayms=60000\",\n    bg: \"linear-gradient(to right, #D4145A 0%, #FBB03B 100%)\"\n  }, React.createElement(\"iframe\", {\n    src: \"https://docs.google.com/presentation/d/e/2PACX-1vSXsgzcbyT512yMth7KAVLq3vFhH900kRFQMYvX1j9I--GqoznhvPZfSSNOIenZM2XTM9-ePnsEoVqO/pubembed?start=true&loop=true&delayms=60000\",\n    frameborder: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    allowfullscreen: \"true\",\n    mozallowfullscreen: \"true\",\n    webkitallowfullscreen: \"true\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import { useTheme, jsx } from '@emotion/react';\nimport React, { forwardRef } from 'react';\nimport { css, get } from '@theme-ui/css';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar _excluded$g = [\"__themeKey\", \"__css\", \"variant\", \"css\", \"sx\", \"as\"];\nvar boxSystemProps = [// space scale props (inherited from @styled-system/space)\n'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', // color props (inherited from @styled-system/color)\n'color', 'backgroundColor', 'bg', 'opacity'];\n\n/**\n * @internal\n */\nvar __isBoxStyledSystemProp = function __isBoxStyledSystemProp(prop) {\n  return boxSystemProps.includes(prop);\n};\n\nvar pickSystemProps = function pickSystemProps(props) {\n  var res = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(boxSystemProps), _step; !(_step = _iterator()).done;) {\n    var key = _step.value;\n    res[key] = props[key];\n  }\n\n  return res;\n};\n/**\n * Use the Box component as a layout primitive to add margin, padding, and colors to content.\n * @see https://theme-ui.com/components/box\n */\n\n\nvar Box$1 = /*#__PURE__*/forwardRef(function Box(props, ref) {\n  var theme = useTheme();\n\n  var _ref = props,\n      _ref$__themeKey = _ref.__themeKey,\n      __themeKey = _ref$__themeKey === void 0 ? 'variants' : _ref$__themeKey,\n      __css = _ref.__css,\n      variant = _ref.variant,\n      cssProp = _ref.css,\n      sx = _ref.sx,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$g);\n\n  var baseStyles = {\n    boxSizing: 'border-box',\n    margin: 0,\n    minWidth: 0\n  };\n\n  var __cssStyles = css(__css)(theme);\n\n  var variantInTheme = get(theme, __themeKey + \".\" + variant) || get(theme, variant);\n  var variantStyles = variantInTheme && css(variantInTheme)(theme);\n  var sxPropStyles = css(sx)(theme);\n  var systemPropsStyles = css(pickSystemProps(rest))(theme);\n  var style = [baseStyles, __cssStyles, variantStyles, sxPropStyles, systemPropsStyles, cssProp];\n  boxSystemProps.forEach(function (name) {\n    delete rest[name];\n  });\n  return jsx(Component, _extends({\n    ref: ref,\n    css: style\n  }, rest));\n});\n\n/**\n * Use the Flex component to create flexbox layouts.\n * @see https://theme-ui.com/components/flex\n */\nvar Flex = /*#__PURE__*/React.forwardRef(function Flex(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref\n  }, props, {\n    sx: _extends({\n      display: 'flex'\n    }, props.sx)\n  }));\n});\n\nvar getProps = function getProps(test) {\n  return function (props) {\n    var next = {};\n\n    for (var key in props) {\n      if (test(key || '')) next[key] = props[key];\n    }\n\n    return next;\n  };\n};\nvar MRE = /^m[trblxy]?$/;\nvar getMargin = getProps(function (k) {\n  return MRE.test(k);\n});\nvar omitMargin = getProps(function (k) {\n  return !MRE.test(k);\n});\n/** @internal */\n\nfunction __internalProps(props) {\n  return props;\n}\n/**\n * @internal Props used by Theme UI Components not intended for user code.\n */\n\nvar _excluded$f = [\"width\", \"columns\", \"gap\", \"repeat\"];\n\nvar px = function px(n) {\n  return typeof n === 'number' ? n + 'px' : n;\n};\n\nvar singleWidthToColumns = function singleWidthToColumns(width, repeat) {\n  return width ? \"repeat(auto-\" + repeat + \", minmax(\" + px(width) + \", 1fr))\" : null;\n};\n\nvar widthToColumns = function widthToColumns(width, repeat) {\n  return Array.isArray(width) ? width.map(function (w) {\n    return singleWidthToColumns(w, repeat);\n  }) : singleWidthToColumns(width, repeat);\n};\n\nvar singleCountToColumns = function singleCountToColumns(n) {\n  return n ? typeof n === 'number' ? \"repeat(\" + n + \", 1fr)\" : n : null;\n};\n\nvar countToColumns = function countToColumns(n) {\n  return Array.isArray(n) ? n.map(singleCountToColumns) : singleCountToColumns(n);\n};\n\n/**\n * CSS grid layout component to arrange direct child elements in a tiled grid layout.\n * @see https://theme-ui.com/components/grid\n */\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(_ref, ref) {\n  var width = _ref.width,\n      columns = _ref.columns,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 3 : _ref$gap,\n      _ref$repeat = _ref.repeat,\n      repeat = _ref$repeat === void 0 ? 'fit' : _ref$repeat,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$f);\n\n  var gridTemplateColumns = !!width ? widthToColumns(width, repeat) : countToColumns(columns);\n  var __css = {\n    display: 'grid',\n    gridGap: gap,\n    gridTemplateColumns: gridTemplateColumns\n  };\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref\n  }, props, __internalProps({\n    __themeKey: 'grids',\n    __css: __css\n  })));\n});\n\nvar Box = Box$1;\n\n/**\n * Primitive button component with variants\n * @see https://theme-ui.com/components/button\n */\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    ref: ref,\n    as: \"button\",\n    variant: \"primary\"\n  }, props, __internalProps({\n    __themeKey: 'buttons',\n    __css: {\n      appearance: 'none',\n      display: props.hidden ? undefined : 'inline-block',\n      textAlign: 'center',\n      lineHeight: 'inherit',\n      textDecoration: 'none',\n      fontSize: 'inherit',\n      px: 3,\n      py: 2,\n      color: 'white',\n      bg: 'primary',\n      border: 0,\n      borderRadius: 4\n    }\n  })));\n});\n\n/**\n * Link variants can be defined in the `theme.links` object.\n * By default the Link component will use styles defined in `theme.styles.a`.\n * @see https://theme-ui.com/components/link\n */\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"a\",\n    variant: \"styles.a\"\n  }, props, __internalProps({\n    __themeKey: 'links'\n  })));\n});\n\n/**\n * Primitive typographic component.\n *\n * Text style variants can be defined in the theme.text object.\n * The Paragraph component uses theme.text.paragraph as its default variant style.\n * @see https://theme-ui.com/components/paragraph\n */\nvar Paragraph = /*#__PURE__*/React.forwardRef(function Paragraph(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"p\",\n    variant: \"paragraph\"\n  }, props, __internalProps({\n    __themeKey: 'text',\n    __css: {\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body'\n    }\n  })));\n});\n\n/**\n * Primitive typographic component.\n *\n * Text style variants can be defined in the theme.text object.\n * @see https://theme-ui.com/components/text\n */\nvar Text = /*#__PURE__*/React.forwardRef(function Text(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    as: \"span\",\n    ref: ref,\n    variant: \"default\"\n  }, props, __internalProps({\n    __themeKey: 'text'\n  })));\n});\n\n/**\n * Primitive heading component, defaults to <h2>.\n *\n * Text style variants can be defined in the theme.text object.\n * The Heading component uses theme.text.heading as its default variant style.\n * @see https://theme-ui.com/components/heading\n */\nvar Heading = /*#__PURE__*/React.forwardRef(function Heading(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"h2\",\n    variant: \"heading\"\n  }, props, __internalProps({\n    __themeKey: 'text',\n    __css: {\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading'\n    }\n  })));\n});\n\n/**\n * Image style variants can be defined in the theme.images object.\n * @see https://theme-ui.com/components/image/\n */\nvar Image = /*#__PURE__*/React.forwardRef(function Image(props, ref) {\n  var __outerCss = props.__css;\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"img\"\n  }, props, __internalProps({\n    __themeKey: 'images',\n    __css: _extends({\n      maxWidth: '100%',\n      height: 'auto'\n    }, __outerCss)\n  })));\n});\n\n/**\n * Card style variants can be defined in the `theme.cards` object.\n * By default the Card component uses the `theme.cards.primary` variant.\n * @see https://theme-ui.com/components/card\n */\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    variant: \"primary\"\n  }, props, __internalProps({\n    __themeKey: 'cards'\n  })));\n});\n\n/**\n * Label variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.label` variant by default.\n * @see https://theme-ui.com/components/label/\n */\nvar Label = /*#__PURE__*/React.forwardRef(function Label(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"label\",\n    variant: \"label\"\n  }, props, __internalProps({\n    __themeKey: 'forms',\n    __css: {\n      width: '100%',\n      display: 'flex'\n    }\n  })));\n});\n\nvar _excluded$e = [\"sx\", \"autofillBackgroundColor\"];\nvar autofillStyles = {\n  boxShadow: 'inset 0 0 0 1000px var(--theme-ui-input-autofill-bg)',\n  fontSize: 'inherit',\n  ':first-line': {\n    fontSize: '1rem'\n  }\n};\nvar defaultInputStyles = {\n  display: 'block',\n  width: '100%',\n  p: 2,\n  appearance: 'none',\n  fontSize: 'inherit',\n  lineHeight: 'inherit',\n  border: '1px solid',\n  borderRadius: 4,\n  color: 'inherit',\n  bg: 'transparent',\n  ':autofill, :autofill:hover, :autofill:focus': autofillStyles,\n  ':-webkit-autofill, :-webkit-autofill:hover, :-webkit-autofill:focus': autofillStyles\n};\n\n/**\n * Input variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.input` variant by default.\n * @see https://theme-ui.com/components/input/\n */\nvar Input = /*#__PURE__*/React.forwardRef(function Input(_ref, ref) {\n  var sx = _ref.sx,\n      _ref$autofillBackgrou = _ref.autofillBackgroundColor,\n      autofillBackgroundColor = _ref$autofillBackgrou === void 0 ? 'background' : _ref$autofillBackgrou,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$e);\n\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"input\",\n    variant: \"input\",\n    sx: _extends({\n      '--theme-ui-input-autofill-bg': function themeUiInputAutofillBg(theme) {\n        return theme.colors && get(theme.colors, autofillBackgroundColor, null);\n      }\n    }, sx)\n  }, rest, __internalProps({\n    __themeKey: 'forms',\n    __css: defaultInputStyles\n  })));\n});\n\nvar _excluded$d = [\"size\"];\nvar SVG = /*#__PURE__*/React.forwardRef(function SVG(_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$d);\n\n  var svgProps = _extends({\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: 'currentcolor'\n  }, rest);\n\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"svg\"\n  }, svgProps));\n});\nSVG.displayName = 'SVG';\n\nvar _excluded$c = [\"arrow\"];\n\nvar DownArrow = function DownArrow(props) {\n  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }));\n};\n\n/**\n * Select variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.select` variant by default.\n * @see https://theme-ui.com/components/select/\n */\nvar Select = /*#__PURE__*/React.forwardRef(function Select(_ref, ref) {\n  var arrow = _ref.arrow,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$c);\n\n  var __css = {\n    display: 'block',\n    width: '100%',\n    p: 2,\n    paddingRight: 4,\n    appearance: 'none',\n    fontSize: 'inherit',\n    lineHeight: 'inherit',\n    border: '1px solid',\n    borderRadius: 4,\n    color: 'inherit',\n    backgroundColor: function backgroundColor(theme) {\n      return get(theme, 'colors.background', null);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box$1, _extends({}, getMargin(props), {\n    sx: {\n      display: 'flex'\n    }\n  }), /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"select\",\n    variant: \"select\"\n  }, omitMargin(props), __internalProps({\n    __themeKey: 'forms',\n    __css: __css\n  }))), arrow || /*#__PURE__*/React.createElement(DownArrow, {\n    sx: {\n      ml: -28,\n      alignSelf: 'center',\n      pointerEvents: 'none'\n    }\n  }));\n});\n\n/**\n * Form textarea component\n *\n * Textarea variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.textarea` variant by default.\n * @see https://theme-ui.com/components/textarea/\n */\nvar Textarea = /*#__PURE__*/React.forwardRef(function Textarea(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"textarea\",\n    variant: \"textarea\"\n  }, props, __internalProps({\n    __themeKey: 'forms',\n    __css: {\n      display: 'block',\n      width: '100%',\n      p: 2,\n      appearance: 'none',\n      fontSize: 'inherit',\n      lineHeight: 'inherit',\n      border: '1px solid',\n      borderRadius: 4,\n      color: 'inherit',\n      bg: 'transparent'\n    }\n  })));\n});\n\nvar _excluded$b = [\"className\", \"sx\", \"variant\"];\n\nvar RadioChecked = function RadioChecked(props) {\n  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n  }));\n};\n\nvar RadioUnchecked = function RadioUnchecked(props) {\n  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n  }));\n};\n\nvar RadioIcon = function RadioIcon(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RadioChecked, _extends({}, props, __internalProps({\n    __css: {\n      display: 'none',\n      'input:checked ~ &': {\n        display: 'block'\n      }\n    }\n  }))), /*#__PURE__*/React.createElement(RadioUnchecked, _extends({}, props, __internalProps({\n    __css: {\n      display: 'block',\n      'input:checked ~ &': {\n        display: 'none'\n      }\n    }\n  }))));\n};\n\n/**\n * Form radio input component\n *\n * Radio variants can be defined in `theme.forms` and the\n * component uses the `theme.forms.radio variant` by default.\n * @see https://theme-ui.com/components/radio/\n */\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(_ref, ref) {\n  var className = _ref.className,\n      sx = _ref.sx,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'radio' : _ref$variant,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$b);\n\n  return /*#__PURE__*/React.createElement(Box$1, {\n    sx: {\n      minWidth: 'min-content'\n    }\n  }, /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"input\",\n    type: \"radio\"\n  }, props, {\n    sx: {\n      position: 'absolute',\n      opacity: 0,\n      zIndex: -1,\n      width: 1,\n      height: 1,\n      overflow: 'hidden'\n    }\n  })), /*#__PURE__*/React.createElement(Box$1, _extends({\n    as: RadioIcon,\n    \"aria-hidden\": \"true\",\n    variant: variant,\n    className: className,\n    sx: sx\n  }, __internalProps({\n    __themeKey: 'forms',\n    __css: {\n      mr: 2,\n      borderRadius: 9999,\n      color: 'gray',\n      flexShrink: 0,\n      'input:checked ~ &': {\n        color: 'primary'\n      },\n      'input:focus ~ &': {\n        bg: 'highlight'\n      }\n    }\n  }))));\n});\n\nvar _excluded$a = [\"className\", \"sx\", \"variant\", \"children\"];\n\nvar CheckboxChecked = function CheckboxChecked(props) {\n  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n  }));\n};\n\nvar CheckboxUnchecked = function CheckboxUnchecked(props) {\n  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n  }));\n};\n\nvar CheckboxIcon = function CheckboxIcon(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CheckboxChecked, _extends({}, props, __internalProps({\n    __css: {\n      display: 'none',\n      'input:checked ~ &': {\n        display: 'block'\n      }\n    }\n  }))), /*#__PURE__*/React.createElement(CheckboxUnchecked, _extends({}, props, __internalProps({\n    __css: {\n      display: 'block',\n      'input:checked ~ &': {\n        display: 'none'\n      }\n    }\n  }))));\n};\n\n/**\n * Form checkbox input component\n *\n * Checkbox variants can be defined in `theme.forms` and the\n * component uses the `theme.forms.checkbox` variant by default.\n * @see https://theme-ui.com/components/checkbox/\n */\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(_ref, ref) {\n  var className = _ref.className,\n      sx = _ref.sx,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'checkbox' : _ref$variant,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$a);\n\n  return /*#__PURE__*/React.createElement(Box$1, {\n    sx: {\n      minWidth: 'min-content'\n    }\n  }, /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"input\",\n    type: \"checkbox\"\n  }, props, {\n    sx: {\n      position: 'absolute',\n      opacity: 0,\n      zIndex: -1,\n      width: 1,\n      height: 1,\n      overflow: 'hidden'\n    }\n  })), /*#__PURE__*/React.createElement(Box$1, _extends({\n    as: CheckboxIcon,\n    \"aria-hidden\": \"true\",\n    variant: variant,\n    className: className,\n    sx: sx\n  }, __internalProps({\n    __themeKey: 'forms',\n    __css: {\n      mr: 2,\n      borderRadius: 4,\n      color: 'gray',\n      flexShrink: 0,\n      'input:checked ~ &': {\n        color: 'primary'\n      },\n      'input:focus ~ &': {\n        color: 'primary',\n        bg: 'highlight'\n      }\n    }\n  }))), children);\n});\n\nvar _excluded$9 = [\"className\", \"label\", \"sx\", \"variant\"];\nvar GUTTER = 2;\nvar SIZE = 18;\n\n/**\n * Form switch component\n *\n * Switch variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.switch` variant by default.\n */\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(_ref, ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      sx = _ref.sx,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'switch' : _ref$variant,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$9);\n\n  var __css = {\n    position: 'relative',\n    flexShrink: 0,\n    bg: 'gray',\n    borderRadius: SIZE,\n    height: SIZE + GUTTER * 2,\n    width: SIZE * 2 + GUTTER * 2,\n    mr: 2,\n    'input:disabled ~ &': {\n      opacity: 0.5,\n      cursor: 'not-allowed'\n    },\n    '& > div': {\n      display: 'flex',\n      alignItems: 'center',\n      borderRadius: '50%',\n      height: SIZE,\n      width: SIZE,\n      bg: 'white',\n      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n      position: 'relative',\n      transform: 'translateX(0%)',\n      transition: \"transform 240ms cubic-bezier(0.165, 0.840, 0.440, 1.000)\"\n    },\n    'input:checked ~ &': {\n      bg: 'primary',\n      '> div': {\n        transform: 'translateX(100%)'\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(Label, {\n    sx: {\n      cursor: 'pointer'\n    }\n  }, /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"input\",\n    type: \"checkbox\",\n    \"aria-label\": label\n  }, rest, {\n    sx: {\n      position: 'absolute',\n      opacity: 0,\n      zIndex: -1,\n      width: 1,\n      height: 1,\n      overflow: 'hidden'\n    }\n  }, __internalProps({\n    __themeKey: 'forms'\n  }))), /*#__PURE__*/React.createElement(Box$1, _extends({\n    css: {\n      padding: GUTTER\n    },\n    variant: variant,\n    className: className,\n    sx: sx\n  }, __internalProps({\n    __themeKey: 'forms',\n    __css: __css\n  })), /*#__PURE__*/React.createElement(Box$1, null)), /*#__PURE__*/React.createElement(\"span\", null, label));\n});\n\nvar thumbStyle = {\n  appearance: 'none',\n  width: 16,\n  height: 16,\n  bg: 'currentcolor',\n  border: 0,\n  borderRadius: 9999,\n  variant: 'forms.slider.thumb'\n};\nvar sliderStyle = {\n  display: 'block',\n  width: '100%',\n  height: 4,\n  my: 2,\n  cursor: 'pointer',\n  appearance: 'none',\n  borderRadius: 9999,\n  color: 'inherit',\n  bg: 'gray',\n  ':focus': {\n    outline: 'none',\n    color: 'primary'\n  },\n  '&::-webkit-slider-thumb': thumbStyle,\n  '&::-moz-range-thumb': thumbStyle,\n  '&::-ms-thumb': thumbStyle\n};\n\n/**\n * Range input element\n *\n * Slider variants can be defined in the `theme.forms` object.\n * The Slider component uses `theme.forms.slider` as its default variant style.\n * @see https://theme-ui.com/components/slider/\n */\nvar Slider = /*#__PURE__*/React.forwardRef(function Slider(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"input\",\n    type: \"range\",\n    variant: \"slider\"\n  }, props, __internalProps({\n    __themeKey: 'forms',\n    __css: sliderStyle\n  })));\n});\n\nvar _excluded$8 = [\"as\", \"label\", \"id\", \"name\"];\nvar Field = /*#__PURE__*/React.forwardRef(function Field(_ref, ref) {\n  var _ref$as = _ref.as,\n      Control = _ref$as === void 0 ? Input : _ref$as,\n      label = _ref.label,\n      id = _ref.id,\n      name = _ref.name,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$8);\n\n  var fieldIdentifier = id || name;\n\n  var controlProps = _extends({\n    ref: ref,\n    name: name,\n    id: fieldIdentifier\n  }, omitMargin(rest));\n\n  return /*#__PURE__*/React.createElement(Box$1, getMargin(rest), /*#__PURE__*/React.createElement(Label, {\n    htmlFor: fieldIdentifier\n  }, label), /*#__PURE__*/React.createElement(Control, controlProps));\n}); // Field is generic bcs of `as` prop, so we can't just use types from forwardRef\n\n/**\n * Horizontal `<progress />` bar\n * @see https://theme-ui.com/components/progress/\n */\nvar Progress = /*#__PURE__*/React.forwardRef(function Progress(props, ref) {\n  var __css = {\n    display: 'block',\n    width: '100%',\n    height: '4px',\n    margin: 0,\n    padding: 0,\n    overflow: 'hidden',\n    appearance: 'none',\n    color: 'primary',\n    bg: 'gray',\n    borderRadius: 9999,\n    border: 'none',\n    '&::-webkit-progress-bar': {\n      bg: 'transparent'\n    },\n    '&::-webkit-progress-value': {\n      bg: 'currentcolor'\n    },\n    '&::-moz-progress-bar': {\n      bg: 'currentcolor'\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"progress\",\n    variant: \"styles.progress\"\n  }, props, __internalProps({\n    __css: __css\n  })));\n});\n\nvar _excluded$7 = [\"size\", \"strokeWidth\", \"value\", \"min\", \"max\", \"title\"];\n\n/**\n * Single value SVG donut chart\n * @see https://theme-ui.com/components/donut/\n */\nvar Donut = /*#__PURE__*/React.forwardRef(function Donut(_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 128 : _ref$size,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 1 : _ref$max,\n      title = _ref.title,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$7);\n\n  var r = 16 - (typeof strokeWidth === 'number' ? strokeWidth : parseFloat(strokeWidth));\n  var C = 2 * r * Math.PI;\n  var offset = C - (value - min) / (max - min) * C;\n  var svgProps = {\n    strokeWidth: strokeWidth,\n    viewBox: '0 0 32 32',\n    width: size,\n    height: size,\n    fill: 'none',\n    stroke: 'currentcolor'\n  };\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"svg\",\n    role: \"img\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }, svgProps, props, __internalProps({\n    __css: {\n      color: 'primary'\n    }\n  })), title && /*#__PURE__*/React.createElement(\"title\", null, title), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 16,\n    r: r,\n    opacity: 1 / 8\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 16,\n    r: r,\n    strokeDasharray: C,\n    strokeDashoffset: offset,\n    transform: \"rotate(-90 16 16)\"\n  }));\n});\n\nvar _excluded$6 = [\"size\", \"strokeWidth\", \"max\", \"title\", \"duration\"];\nvar Spinner = /*#__PURE__*/React.forwardRef(function Spinner(_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 48 : _ref$size,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 4 : _ref$strokeWidth;\n      _ref.max;\n      var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Loading' : _ref$title,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 750 : _ref$duration,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$6);\n\n  var __css = {\n    color: 'primary',\n    overflow: 'visible'\n  };\n  var svgProps = {\n    strokeWidth: strokeWidth,\n    viewBox: '0 0 32 32',\n    width: size,\n    height: size,\n    fill: 'none',\n    stroke: 'currentColor',\n    role: 'img'\n  };\n  var circleProps = {\n    strokeWidth: strokeWidth,\n    r: 16 - strokeWidth,\n    cx: 16,\n    cy: 16,\n    fill: 'none'\n  };\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"svg\"\n  }, svgProps, props, __internalProps({\n    __css: __css\n  })), /*#__PURE__*/React.createElement(\"title\", null, title), /*#__PURE__*/React.createElement(\"circle\", _extends({}, circleProps, {\n    opacity: 1 / 8\n  })), /*#__PURE__*/React.createElement(\"circle\", _extends({}, circleProps, {\n    strokeDasharray: \"20 110\"\n  }), /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    attributeType: \"XML\",\n    type: \"rotate\",\n    from: \"0 16 16\",\n    to: \"360 16 16\",\n    dur: duration + \"ms\",\n    repeatCount: \"indefinite\"\n  })));\n});\n\nvar _excluded$5 = [\"size\"];\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 48 : _ref$size,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$5);\n\n  return /*#__PURE__*/React.createElement(Image, _extends({\n    ref: ref,\n    width: size,\n    height: size,\n    variant: \"avatar\"\n  }, props, __internalProps({\n    __css: {\n      borderRadius: 9999\n    }\n  })));\n});\n\nvar Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    variant: \"primary\"\n  }, props, __internalProps({\n    __themeKey: 'badges',\n    __css: {\n      display: 'inline-block',\n      verticalAlign: 'baseline',\n      fontSize: 0,\n      fontWeight: 'bold',\n      whiteSpace: 'nowrap',\n      px: 1,\n      borderRadius: 2,\n      color: 'white',\n      bg: 'primary'\n    }\n  })));\n});\n\nvar _excluded$4 = [\"size\"];\n\n/**\n * Transparent button for SVG icons\n *\n * IconButton variants can be defined in the `theme.buttons` object.\n * By default the IconButton component will use styles defined in `theme.buttons.icon`.\n *\n * @see https://theme-ui.com/components/icon-button\n */\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(_ref, ref) {\n  var _css;\n\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 32 : _ref$size,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n\n  var emotionCssLabel = ((_css = props.__css) == null ? void 0 : _css.label) || 'IconButton';\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"button\",\n    variant: \"icon\"\n  }, props, __internalProps({\n    __themeKey: 'buttons',\n    __css: {\n      label: emotionCssLabel,\n      appearance: 'none',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 1,\n      width: size,\n      height: size,\n      color: 'inherit',\n      bg: 'transparent',\n      border: 'none',\n      borderRadius: 4\n    }\n  })));\n});\n\nvar _excluded$3 = [\"size\"];\nvar CloseIcon = /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}));\n\n/**\n * Button with close (×) icon.\n *\n * The Close component renders as a <button> element by default.\n * Pass any button attributes as props to the component.\n *\n * Close component variants can be defined in the theme.buttons object.\n * The Close component uses theme.buttons.close as its default variant style.\n */\nvar Close = /*#__PURE__*/React.forwardRef(function Close(_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 32 : _ref$size,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    ref: ref,\n    size: size,\n    title: \"Close\",\n    \"aria-label\": \"Close\",\n    variant: \"close\"\n  }, props, {\n    children: CloseIcon\n  }));\n});\n\n/**\n * Component for displaying messages, notifications, or other application state.\n *\n * Alert variants can be defined in `theme.alerts`.\n * The Alert component uses `theme.alerts.primary` as its default variant.\n */\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    variant: \"primary\"\n  }, props, __internalProps({\n    __themeKey: 'alerts',\n    __css: {\n      display: 'flex',\n      alignItems: 'center',\n      px: 3,\n      py: 2,\n      fontWeight: 'bold',\n      color: 'white',\n      bg: 'primary',\n      borderRadius: 4\n    }\n  })));\n});\n\n/**\n * The Divider component reuses styles from `theme.styles.hr` as its default variant.\n */\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"hr\",\n    variant: \"styles.hr\"\n  }, props, __internalProps({\n    __css: {\n      color: 'gray',\n      m: 0,\n      my: 2,\n      border: 0,\n      borderBottom: '1px solid'\n    }\n  })));\n});\n\nvar _excluded$2 = [\"variant\", \"sx\", \"ratio\", \"src\", \"frameBorder\", \"allowFullScreen\", \"width\", \"height\", \"allow\"];\nvar getContainerProps = getProps(__isBoxStyledSystemProp);\nvar getIframeProps = getProps(function (str) {\n  return !__isBoxStyledSystemProp(str);\n});\n\n/**\n * Responsive iframe for video embeds.\n *\n * Embed variants can be defined anywhere in the theme object.\n *\n * @see https://theme-ui.com/components/embed\n */\nvar Embed = /*#__PURE__*/React.forwardRef(function Embed(_ref, ref) {\n  var variant = _ref.variant,\n      sx = _ref.sx,\n      _ref$ratio = _ref.ratio,\n      ratio = _ref$ratio === void 0 ? 16 / 9 : _ref$ratio,\n      src = _ref.src,\n      _ref$frameBorder = _ref.frameBorder,\n      frameBorder = _ref$frameBorder === void 0 ? 0 : _ref$frameBorder,\n      _ref$allowFullScreen = _ref.allowFullScreen,\n      allowFullScreen = _ref$allowFullScreen === void 0 ? true : _ref$allowFullScreen,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 560 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 315 : _ref$height,\n      allow = _ref.allow,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  var iframeProps = _extends({\n    src: src,\n    width: width,\n    height: height,\n    frameBorder: frameBorder,\n    allowFullScreen: allowFullScreen,\n    allow: allow\n  }, getIframeProps(rest));\n\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    variant: variant,\n    sx: sx\n  }, getContainerProps(rest), __internalProps({\n    __css: {\n      width: '100%',\n      height: 0,\n      paddingBottom: 100 / ratio + '%',\n      position: 'relative',\n      overflow: 'hidden'\n    }\n  })), /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    as: \"iframe\"\n  }, iframeProps, __internalProps({\n    __css: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      border: 0\n    }\n  }))));\n});\n\nvar _excluded$1 = [\"ratio\", \"children\"];\n\n/**\n * Component for maintaining a fluid-width aspect ratio\n * @see https://theme-ui.com/components/aspect-ratio\n */\nvar AspectRatio = /*#__PURE__*/React.forwardRef(function AspectRatio(_ref, ref) {\n  var _ref$ratio = _ref.ratio,\n      ratio = _ref$ratio === void 0 ? 4 / 3 : _ref$ratio,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  return /*#__PURE__*/React.createElement(Box$1, {\n    ref: ref,\n    sx: {\n      position: 'relative',\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/React.createElement(Box$1, {\n    sx: {\n      width: '100%',\n      height: 0,\n      paddingBottom: 100 / ratio + '%'\n    }\n  }), /*#__PURE__*/React.createElement(Box$1, _extends({}, props, __internalProps({\n    __css: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  })), children));\n});\n\nvar _excluded = [\"ratio\"];\n\n/**\n * Image component constrained by as aspect ratio.\n * @see https://theme-ui.com/components/aspect-image\n */\nvar AspectImage = /*#__PURE__*/React.forwardRef(function AspectImage(_ref, ref) {\n  var ratio = _ref.ratio,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(AspectRatio, {\n    ratio: ratio\n  }, /*#__PURE__*/React.createElement(Image, _extends({\n    ref: ref\n  }, props, __internalProps({\n    __css: {\n      objectFit: 'cover'\n    }\n  }))));\n});\n\n/**\n * Centered, max-width layout component\n *\n * Container variants can be defined in the `theme.layout` object.\n * The Container component uses `theme.layout.container` as its default variant style.\n * @see https://theme-ui.com/components/container\n */\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref,\n    variant: \"container\"\n  }, props, __internalProps({\n    __themeKey: 'layout',\n    __css: {\n      width: '100%',\n      maxWidth: 'container',\n      mx: 'auto'\n    }\n  })));\n});\n\n/**\n * Link component for use in navigation\n *\n * NavLink variants can be defined in the `theme.links` object.\n * By default the NavLink component will use styles defined in `theme.links.nav`.\n * @see https://theme-ui.com/components/nav-link\n */\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLink(props, ref) {\n  var __css = {\n    color: 'inherit',\n    textDecoration: 'none',\n    fontWeight: 'bold',\n    display: 'inline-block',\n    '&:hover, &:focus, &.active': {\n      color: 'primary'\n    }\n  };\n  return /*#__PURE__*/React.createElement(Link, _extends({\n    ref: ref,\n    variant: \"nav\"\n  }, props, __internalProps({\n    __css: __css\n  })));\n});\n\n/**\n * Styled Box component for callouts and inline messages\n *\n * Message variants can be defined in the theme.messages object.\n * @see https://theme-ui.com/components/message\n */\nvar Message = /*#__PURE__*/React.forwardRef(function Message(props, ref) {\n  var __css = {\n    padding: 3,\n    paddingLeft: function paddingLeft(t) {\n      return t.space && Number(t.space[3]) - Number(t.space[1]);\n    },\n    borderLeftWidth: function borderLeftWidth(t) {\n      return t.space && Number(t.space[1]);\n    },\n    borderLeftStyle: 'solid',\n    borderLeftColor: 'primary',\n    borderRadius: 4,\n    bg: 'highlight'\n  };\n  return /*#__PURE__*/React.createElement(Box$1, _extends({\n    ref: ref\n  }, props, __internalProps({\n    __themeKey: 'messages',\n    __css: __css\n  })));\n});\n\nvar MenuIcon = function MenuIcon(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size;\n  return jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: size,\n    height: size,\n    fill: \"currentColor\",\n    css: {\n      display: 'block',\n      margin: 0,\n      boxSizing: 'border-box',\n      minWidth: 0\n    }\n  }, jsx(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  }));\n};\n\n/**\n * MenuButton variants can be defined in the `theme.buttons` object.\n * By default the MenuButton component will use styles defined in `theme.buttons.menu`.\n *\n * @see https://theme-ui.com/components/menu-button\n */\nvar MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, ref) {\n  return jsx(IconButton, _extends({\n    ref: ref,\n    title: \"Menu\",\n    \"aria-label\": \"Toggle Menu\",\n    variant: \"menu\"\n  }, props), jsx(MenuIcon, null));\n});\n\nexport { Alert, AspectImage, AspectRatio, Avatar, Badge, Box$1 as Box, Button, Card, Checkbox, Close, CloseIcon, Container, Divider, Donut, Embed, Field, Flex, Grid, Heading, IconButton, Image, Input, Label, Link, MenuButton, MenuIcon, Message, NavLink, Paragraph, Progress, Radio, Select, Slider, Spinner, Switch, Text, Textarea, __isBoxStyledSystemProp };\n","/** @jsx jsx */\nimport { Box, Flex, Link, useColorMode, jsx } from \"theme-ui\"\n\nconst Footer = () => {\n  const [colorMode, setColorMode] = useColorMode<\"light\" | \"dark\">()\n  const isDark = colorMode === `dark`\n\n  return (\n    <Box as=\"footer\" variant=\"footer\">\n      Copyright &copy; {new Date().getFullYear()}. All rights reserved.\n      <br />\n    </Box>\n  )\n}\n\nexport default Footer\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Get in touch\"), \"\\n\", React.createElement(_components.p, null, \"Email us at \", React.createElement(\"a\", {\n    href: \"mailto:hello@tinytubebio.com\"\n  }, \"hello@tinytubebio.com\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport Divider from \"../elements/divider\";\nimport Inner from \"../elements/inner\";\nimport Content from \"../elements/content\";\nimport Svg from \"./svg\";\n\nimport ProjectsMDX from \"../sections/projects.mdx\";\nimport Footer from \"./footer\";\nimport ContactMDX from \"../sections/contact.mdx\";\n\nconst Projects = ({\n  offset,\n  factor = 2,\n}: {\n  offset: number;\n  factor?: number;\n}) => (\n  <div>\n    <Content speed={0.4} offset={offset} factor={factor}>\n      <Inner>\n        <div\n          sx={{\n            display: `grid`,\n            gridGap: [0, 0, 0, 5],\n            gridTemplateColumns: [`1fr`],\n            h2: { gridColumn: `-1/1`, color: `white !important` },\n            width: `100%`,\n          }}\n        >\n          <ProjectsMDX />\n        </div>\n        <div sx={{ paddingTop: `100px` }}>\n          <ContactMDX />\n        </div>\n        <Footer />\n      </Inner>\n    </Content>\n  </div>\n);\n\nexport default Projects;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Dispensing microlitre amounts of liquid is the fundamental action of the life science field. \", React.createElement(\"span\", {\n    sx: {\n      color: `primary !important`\n    }\n  }, \"The tool for this work is the micropipette.\")), \"\\n\", React.createElement(_components.p, null, \"Micropipettes are so ubiquitous in the wet lab that you've probably seen them in movies and TV!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"By leveraging advances in electronics fabrication, we have invented a low cost digital sensor that measures microlitres of liquid with high precision.\"), \"\\n\", React.createElement(_components.p, null, \"Using our sensor we can build a fundamentally different kind of micropipette.\"), \"\\n\", React.createElement(_components.p, null, \"This first-of-its-kind device will beat the current best-in-class ones in precision and cost.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import * as React from \"react\";\nimport Divider from \"../elements/divider\";\nimport Inner from \"../elements/inner\";\nimport Content from \"../elements/content\";\nimport Svg from \"./svg\";\nimport { withPrefix } from \"gatsby\";\nimport AvatarPic from \"../../../../static/avatar-pipette.jpg\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { UpDown, UpDownWide } from \"../styles/animations\";\nimport AboutMDX from \"../sections/about.mdx\";\nimport AboutPipettes from \"../sections/about_pipettes.mdx\";\n\nimport { Card, Text } from \"theme-ui\";\n\nconst About = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\n  <div>\n    <Content speed={0.35} offset={offset} factor={factor}>\n      <Inner>\n        <AboutMDX />\n        <Card\n          sx={{\n            marginTop: `50px`,\n            marginBottom: `50px`,\n            maxWidth: `100%`,\n            padding: `1%`,\n            background: \"linear-gradient(to right, #D4145A 0%, #FBB03B 100%)\",\n            transition: `all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important`,\n            borderRadius: 8,\n            boxShadow: \"0 0 8px rgba(0, 0, 0, 0.125)\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"normal\",\n            alignContent: \"normal\",\n          }}\n        >\n          <Card\n            sx={{\n              display: \"block\",\n              // flexGrow: 1,\n              // maxWidth: `50%`,\n              height: `100%`,\n              flexGrow: 1,\n              padding: `1%`,\n            }}\n          >\n            <StaticImage\n              src=\"../images/avatar-pipette.png\"\n              sx={{ height: `100%` }}\n            ></StaticImage>\n            <Text>(Avatar 2009)</Text>\n          </Card>\n          <Card\n            sx={{\n              display: \"block\",\n              flexGrow: 1,\n              // maxWidth: `50%`,\n              height: `100%`,\n              padding: `1%`,\n            }}\n          >\n            <StaticImage\n              src=\"../images/csi-vegas.webp\"\n              sx={{ height: `100%` }}\n            ></StaticImage>\n            <Text>(CSI:Vegas 2021)</Text>\n          </Card>\n        </Card>\n\n        <AboutPipettes />\n      </Inner>\n    </Content>\n    {/* <Content speed={0.4} offset={0.75} factor={factor}>\n      <Inner></Inner>\n    </Content> */}\n    <Divider\n      bg=\"divider\"\n      clipPath=\"polygon(0 16%, 100% 4%, 100% 82%, 0 94%)\"\n      speed={0.2}\n      offset={offset * 1.5}\n      factor={factor * 1.5}\n    />\n    {/* <StaticImage src=\"../../static/avatar-pipette.png\" width={600} alt=\"pipette in avatar\" /> */}\n    {/* <Divider\n      bg=\"divider\"\n      clipPath=\"polygon(0 16%, 100% 4%, 100% 82%, 0 94%)\"\n      speed={0.2}\n      offset={offset}\n      factor={factor}\n    />\n    <Divider speed={0.1} offset={offset} factor={factor}>\n      <UpDown>\n      </UpDown>\n      <UpDownWide>\n      </UpDownWide>\n    </Divider> */}\n  </div>\n);\n\nexport default About;\n","import * as React from \"react\";\nimport type { HeadFC } from \"gatsby\";\nimport { Parallax } from \"@react-spring/parallax\";\nimport Layout from \"../components/layout\";\nimport Hero from \"../components/hero\";\nimport Projects from \"../components/projects\";\nimport About from \"../components/about\";\nimport Contact from \"../components/contact\";\nimport Seo from \"../components/seo\";\n\nconst Cara = () => (\n  <Layout>\n    <Parallax pages={3}>\n      <Hero offset={0} factor={1} />\n      <About offset={1.25} factor={0.25} />\n      <Projects offset={1.55} factor={1.85} />\n    </Parallax>\n  </Layout>\n);\n\nexport default Cara;\n\nexport const Head: HeadFC = () => <Seo />;\n"],"names":["W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","i","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","length","map","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","lastIndex","m1","charAt","_","identifier","postProcess","module","exports","_createMdxContent","props","_components","Object","assign","h1","em","_provideComponents","components","React","wrapper","MDXLayout","_ref","offset","factor","jsx","Divider","speed","MicroCartIcon","sx","stroke","fill","color","UpDownWide","Content","variant","Inner","Intro","transform","svg","path","animation","waveAnimation","xmlns","id","viewBox","preserveAspectRatio","attributeName","values","repeatCount","dur","ProjectCard","component","_missingMdxReference","title","link","bg","frameborder","allowfullscreen","mozallowfullscreen","webkitallowfullscreen","_extends","bind","target","hasOwnProperty","call","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_arrayLikeToArray","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","minLen","toString","constructor","name","from","_unsupportedIterableToArray","done","value","_excluded$g","boxSystemProps","__isBoxStyledSystemProp","prop","includes","Box$1","forwardRef","theme","_ref$__themeKey","__themeKey","__css","cssProp","css","_ref$as","Component","rest","__cssStyles","variantInTheme","variantStyles","sxPropStyles","systemPropsStyles","_step","res","_iterator","pickSystemProps","boxSizing","margin","minWidth","forEach","getProps","MRE","Text","Card","_excluded$d","SVG","_ref$size","size","svgProps","str","Footer","colorMode","setColorMode","useColorMode","Box","Date","getFullYear","h2","href","gridGap","gridTemplateColumns","gridColumn","ProjectsMDX","ContactMDX","AboutMDX","marginTop","marginBottom","padding","background","borderRadius","boxShadow","flexDirection","justifyContent","alignItems","alignContent","flexGrow","StaticImage","require","AboutPipettes","clipPath","Cara","Layout","Parallax","pages","Hero","About","Projects","Head","Seo"],"sourceRoot":""}